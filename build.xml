<?xml version="1.0" encoding="UTF-8"?>
<!--
    Document   : build.xml
    Created on : May 11, 2010, 8:35 PM
    Author     : fqqdk <fqqdk@freemail.hu>
    Description:
        The main build file
-->

<project name="phpcmc">

<!--
	project header: general targets tasks, macrodefs, imports, etc
	MUST NOT have dependencies
	MUST NOT have descriptions
	MUST have bodies
-->

<condition property="shell.task" value="win-shell" else="exec-shell"><os family="windows" /></condition>
<import file="src/zetsubo/ant/${shell.task}.xml" />
<import file="src/zetsubo/ant/php.xml" />

<target name="unimplemented">
	<fail message="Unimplemented target!" />
</target>

<!--
	abstract public targets, defining the workflows
		they MUST NOT have bodies
		they MUST have descriptions
		they MAY have multiple dependencies on other abstract targets to define their workflow
		they MUST have at most one implementation dependency
		the implementor target (if there is one) MUST appear after the ordering (workflow) dependencies
-->

	<target name        = "prepare"
			description = "prepares the project by setting properties, filesets, etc"
			depends     = "phpcmc.prepare" />

	<target name        = "clean"
			description = "cleans the working directories"
			depends     = "prepare, phpmc.clean" />

	<target name        = "unittest"
			description = "runs unit level tests"
			depends     = "prepare, phpunit" />

	<target name        = "package"
			description = "packages the project"
			depends     = "prepare, pear" />

	<target name        = "deploy"
			description = "deploys package to the repository"
			depends     = "prepare, jabbar-deploy" />

	<target name        = "release"
			description = "releases the project"
			depends     = "bump, prepare, package, deploy" />

	<target name        = "document"
			description = "generates the API documentation"
			depends     = "prepare, phpdoc" />

	<target name        = "checkstyle"
			description = "checks for standard violations"
			depends     = "prepare, phpcs" />

	<target name="build"      description="runs the build"                 depends="phpunit" />

<!-- 
	internal targets, defining implementation details of abstract targets
		they SHOULD NOT have descriptions
		they MUST be prefixed with a unique prefix to create consistent naming
		they MAY depend on abstract targets, but those are ordering dependencies so it is discouraged
			(workflow dependencies SHOULD be defined among the abstract targets)
		they MAY depend on other internal targets to define an internal, implementation specific worflow
		internal dependencies MUST appear after any abstract dependency
		internal dependencies of a target MUST be in the same namespace
-->

<!-- project specific implementation targets -->
	<target name="phpcmc.prepare">
		<tstamp prefix="release">
			<format property="date" pattern="yyyy-MM-dd" />
			<format property="time" pattern="HH:mm:ss" />
		</tstamp>
		<property file="version.properties" />
		<property name="release.version" value="${version.major}.${version.minor}" />
		<property name="uriAndOrChannel" value="&lt;channel&gt;pear.meza.hu&lt;/channel&gt;" />
		<property name="target.dir"      value="${basedir}/build" />
		<property name="package.dir"     value="${target.dir}/package" />
		<property name="package.url"     value="${package.dir}/phpcmc-${release.version}.tgz" />
		<property name="phpcs.standard"  value="Angst" />
    </target>

	<target name="phpmc.clean" depends="prepare">
		<delete dir="${target.dir}"/>

		<mkdir dir="${target.dir}/work" />
		<mkdir dir="${target.dir}/logs" />
        <mkdir dir="${target.dir}/pirum" />
		<mkdir dir="${target.dir}/doc" />
		<mkdir dir="${target.dir}/package" />
		<mkdir dir="${target.dir}/checkstyle" />
        <mkdir dir="${target.dir}/coverage" />
	</target>

	<target name = "phpunit">
		<phpunit config="phpunit.xml" test="tests"/>
	</target>

	<target name = "phpcs">
		<phpcs 
			standard  = "${phpcs.standard}"
			outputdir ="build/checkstyle">

			<fileset dir = "${basedir}">
				<include name="src/**/*.php" />
				<include name="tests/**/*.php" />
			</fileset>
		</phpcs>
	</target>

    <target name="phpdoc" depends="unimplemented">
		<exec dir="${basedir}"
			executable="phpdoc"
			failonerror="false">
			<arg line="-t ${target.dir}/doc/ -o HTML:default:default -d ${basedir}/"/>
		</exec>
    </target>

	<target name="bump">
		<propertyfile file="version.properties">
			<entry key="version.minor" operation="+" value="1" default="0" type="int" />
		</propertyfile>
	</target>

	<target name="explode-pear" depends="prepare">
		<echo message="generating package with version ${release.version}" />

		<delete dir="${package.dir}" />
		<mkdir dir="${package.dir}" />

		<!-- scripts -->
		<copy todir="${package.dir}">
			<fileset dir="${basedir}/src">
				<include name="*.*" />
			</fileset>
		</copy>

		<!-- sources -->
		<copy todir="${package.dir}">
			<fileset dir="${basedir}/src">
				<include name="**" />
				<exclude name="*.*" />
			</fileset>
		</copy>

		<!-- tests -->
		<copy todir="${package.dir}/tests">
			<fileset dir="${basedir}/tests">
				<include name="**" />
			</fileset>
		</copy>
	</target>

	<target name="package-xml" depends="explode-pear">
		<copy tofile="${package.dir}/package.xml" file="${basedir}/jabbar.xml">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>

	<target name="pear" depends="package-xml">
		<pear dir="${package.dir}">
			<arg line="package" />
		</pear>
	</target>

	<target name="jabbar-deploy" depends="prepare">
		<pear>
			<arg line="-v install -f ${package.url}" />
		</pear>
	</target>

	<target name="install-standard">
		<mkdir dir="${pear.dir}/PHP/CodeSniffer/Standards/Angst" />
		<copy
			file   = "src/PHP/CodeSniffer/Standards/Angst/AngstCodingStandard.php"
			tofile = "${pear.dir}/PHP/CodeSniffer/Standards/Angst/AngstCodingStandard.php" />
	</target>
</project>